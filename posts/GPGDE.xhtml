<hr>
<p>layout: post
    title: &quot; How to generate your own GPG keypair (DE) &quot;</p>
<h2 id="date-2022-08-30">date: 2022-08-30</h2>
<h2 id="einrichtung-erkl-rung-und-einsatz-von-gnupg">Einrichtung, Erklärung und Einsatz von GnuPG</h2>
<h2 id="informationen-zu-gnupg-gpg-">Informationen zu GnuPG (GPG)</h2>
<ul>
    <li>GnuPG ist eine vollständige und freie Implementierung des OpenPGP-
        Standards, auch bekannt als PGP.</li>
    <li>GnuPG kann unter der Lizenzbedingungen des GPLv3 frei verwendet, verändert
        und weitergegeben werden.</li>
    <li>Mit GnuPG kann man Daten und Kommunikation verschlüsseln und
        entschlüsseln, elektronische Signaturen erzeugen und prüfen,sowie sich
        authentifizieren.</li>
    <li>GnuPG unterstützt unter anderem auch S/MIME und SSH.</li>
    <li>Für und mit GnuPG gibt es eine vielzahl von Anwendungen. Eine der
        bekannteren Anwendungen ist Kleopatra für Windows.</li>
    <li>GnuPG läuft auf allen Unix-Plattformen + Windows und macOS.</li>
</ul>
<h2 id="algorithmen-im-jahr-2022">Algorithmen im Jahr 2022</h2>
<ul>
    <li>RSA (Verschlüsseln, Entschlüsseln und Signieren) ist seit einigen Jahren
        der Standard,wenn es um die Erstellung und Nutzung von asymmetrischer
        Verschlüsselung geht.</li>
    <li>DSA (Entschlüsseln und Signieren) sollte nicht mehr verwendet werden, da
        der benötigte Zufall für einen sicheren Schlüssel nur durch spezielle tRNG
        gewährleistet wird. Standard Systeme nutzen oft nur pRNG und dadurch
        kann der Schlüssel mit wenig Aufwand gebrochen werden.</li>
    <li>Elgamal (Verschlüsseln) für Elgamal gilt das Gleiche wie für DSA.</li>
    <li>ECC (Elliptische-Kurven-Kryptografie) ist langsam im Kommen, hat aber
        derzeit noch das Problem ,das es nicht mit allen Systemen funktioniert,daher
        ist es ungeeignet für die Nutzung mit GPG. Derzeit gibt es
        auch nur eine Kurve die als wirklich &quot;sicher&quot; gilt.</li>
</ul>
<h2 id="schl-ssell-ngen-im-jahr-2021">Schlüssellängen im Jahr 2021</h2>
<p>Die Wahl der richtigen Schlüssellänge ist wichtig um sicherzustellen,dass der
    Schlüssel eine Komplexität erreicht die in endlicher Zeit nicht zu brechen ist und
    somit als sicher gilt.
    Die meisten Systeme nehmen als Standardeinstellungen eine Schlüssellänge von
    3072Bit, aber um sein Schlüsselpaar für eine längere Zeit nutzen zu können sollte
    der Schlüssel <strong>mindestens</strong> eine Länge von 4096Bit haben. Es macht derzeit nur
    wenig Sinn die Länge des Schlüssels noch weiter zu steigern, denn die X-Fache
    Länge des Schlüssels lässt die Komplexität nicht im gleichen Maße steigen. Das heißt,
    ein Schlüssel mit der Länge 8192Bit ist nicht doppelt so Komplex wie bei einer
    Länge von 4096Bit.
    Schlüssel mit der Länge 1024Bit sollten unter keinen Umständen mehr genutzt
    werden und man sollte sich ein neues Schlüsselpaar erstellen. Bei 2048Bit
    Schlüsseln gilt es derzeit noch abzuwegen ob dieser noch für eine gewisse Zeit
    weiter verwendet wird oder nicht.
    ACHTUNG! Alte Schlüsselpaare unter keinen Umständen löschen. Sonst ist
    ein Entschlüsseln alter Dateien und Kommunikationen nicht mehr möglich. Ein
    einfaches Widerrufen des alten öffentlichen Schlüssels reicht vollkommen aus.
    Danach einfach ein neues Schlüsselpaar erstellen und den neuen öffentlichen
    Schlüssel über verschiedene Wege verteilen.</p>
<h2 id="gnupg-cli">GnupG CLI</h2>
<ul>
    <li>Beachte,dass du eine Email-Adresse eingibst,sie kann auch erfunden sein </li>
    <li>Beachte,dass du die Gültigkeit des Schlüsselpaares maximal für 3-5 Jahre eintragen solltest</li>
    <li><strong>WICHTIG DER PRIVATE KEY BLEIBT NUR BEI DIR NICHT TEILEN !</strong></li>
    <li>Den Fingerprint bekommst du mit <code>gpg --list-keys email@adresse.com</code> <strong>(Die Buchstaben-
            Zahlenkette)</strong></li>
</ul>
<p><strong>Erstellung des Schlüsselpaares</strong></p>
<ul>
    <li><code>gpg --full-generate-key --expert</code></li>
</ul>
<p><strong>Backup des Schlüsselpaares</strong></p>
<ul>
    <li><code>gpg --armor --output privkey@example.com.asc --export-secret-keys FINGERPRINT</code></li>
    <li><code>gpg --armor --output pubkey@example.com.asc --export FINGERPRINT</code></li>
    <li>
        <p><code>gpg --ownertrust &gt; owntertrust-example.de.txt</code></p>
    </li>
    <li>
        <p>Herzlichen Glückwunsch du hast jetzt ein Schlüsselpaar! </p>
    </li>
</ul>
<h2 id="widerrufzertifikat-erstellen">Widerrufzertifikat erstellen</h2>
<ul>
    <li><code>gpg --output revoke@example.de.asc --gen-revoke FINGERPRINT</code></li>
</ul>
<h2 id="importieren-von-ffentlichen-schl-sseln">Importieren von öffentlichen Schlüsseln</h2>
<ul>
    <li><code>gpg --import datacobra-gpgkey.asc</code>
        <ul>
            <li>Der Public-Key wird dafür benötigt <h2 id="andere-features-von-gnupg">Andere Features von GnuPG</h2>
            </li>
        </ul>
    </li>
</ul>
<h3 id="symmetrische-verschl-sselung">symmetrische Verschlüsselung</h3>
<ul>
    <li><code>gpg -c test.txt</code></li>
    <li><code>gpg --output test.txt --decrypt test.txt.gpg</code>
        <h3 id="signieren-und-verifizieren-von-dateien">Signieren und Verifizieren von Dateien</h3>
    </li>
    <li><code>gpg --detach-sign -a test.txt</code></li>
    <li><code>gpg --verify test.txt.asc</code>
        <h3 id="verschl-sselung-von-dateien-und-verzeichnissen">Verschlüsselung von Dateien und Verzeichnissen</h3>
    </li>
    <li><code>gpg --output doc.gpg --encrypt --recipient blake@cyb.org doc</code></li>
    <li><code>gpg --output doc --decrypt doc.gpg</code></li>
    <li><code>gpgtar --encrypt --output mydocs.gpg --recipient Bob@ross.org mydocs</code></li>
    <li><code>gpgtar --list-archive mydocs.gpg</code></li>
    <li><code>gpgtar --decrypt mydocs.gpg</code>
        oder erstelle erst ein Tar-Archiv und verschlüssel es dann</li>
</ul>
<p>Und mein <a href="https://c3866s.github.io/pubkey">GPG-Key</a></p>